// <auto-generated />
using System;
using FamilyBudgetManagementApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FamilyBudgetApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230805125644_PopulateDb_5")]
    partial class PopulateDb_5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FamilyBudgetApp.Data.Models.Budget", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Bugets");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Balance = 100.0m
                        });
                });

            modelBuilder.Entity("FamilyBudgetManagementApp.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("BudgetId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<bool>("IsReccuring")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReccursOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimesReccuring")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("efca934e-ad52-4d8f-a34b-6643eb9a03c6"),
                            Amount = 860m,
                            BudgetId = (byte)1,
                            CreatedOn = new DateTime(2022, 12, 7, 15, 56, 43, 896, DateTimeKind.Local).AddTicks(5207),
                            Currency = 0,
                            IsReccuring = false,
                            Name = "Transaction 1",
                            ReccursOn = new DateTime(2023, 9, 3, 15, 56, 43, 896, DateTimeKind.Local).AddTicks(5242),
                            TimesReccuring = 2,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("bfab6662-ae8e-4753-bf3f-bc970435ada2"),
                            Amount = 26m,
                            BudgetId = (byte)1,
                            CreatedOn = new DateTime(2023, 1, 30, 15, 56, 43, 896, DateTimeKind.Local).AddTicks(5274),
                            Currency = 0,
                            IsReccuring = true,
                            Name = "Transaction 2",
                            ReccursOn = new DateTime(2023, 8, 10, 15, 56, 43, 896, DateTimeKind.Local).AddTicks(5275),
                            TimesReccuring = 2,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("3d3704c0-b98c-49ce-8881-2f90880e4d49"),
                            Amount = 335m,
                            BudgetId = (byte)1,
                            CreatedOn = new DateTime(2023, 1, 31, 15, 56, 43, 896, DateTimeKind.Local).AddTicks(5280),
                            Currency = 0,
                            IsReccuring = true,
                            Name = "Transaction 3",
                            ReccursOn = new DateTime(2023, 9, 3, 15, 56, 43, 896, DateTimeKind.Local).AddTicks(5282),
                            TimesReccuring = 9,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f3a044c1-bcf8-4dc3-a315-da25116a9895"),
                            Amount = 67m,
                            BudgetId = (byte)1,
                            CreatedOn = new DateTime(2023, 4, 11, 15, 56, 43, 896, DateTimeKind.Local).AddTicks(5286),
                            Currency = 0,
                            IsReccuring = false,
                            Name = "Transaction 4",
                            ReccursOn = new DateTime(2023, 8, 14, 15, 56, 43, 896, DateTimeKind.Local).AddTicks(5288),
                            TimesReccuring = 4,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("ebc4801f-50ab-4a48-9127-38392c851442"),
                            Amount = 580m,
                            BudgetId = (byte)1,
                            CreatedOn = new DateTime(2023, 6, 27, 15, 56, 43, 896, DateTimeKind.Local).AddTicks(5291),
                            Currency = 0,
                            IsReccuring = true,
                            Name = "Transaction 5",
                            ReccursOn = new DateTime(2023, 8, 25, 15, 56, 43, 896, DateTimeKind.Local).AddTicks(5293),
                            TimesReccuring = 8,
                            Type = 0
                        });
                });

            modelBuilder.Entity("FamilyBudgetManagementApp.Models.Transaction", b =>
                {
                    b.HasOne("FamilyBudgetApp.Data.Models.Budget", "Budget")
                        .WithMany("Transactions")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("FamilyBudgetApp.Data.Models.Budget", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
